*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}body{font-family:Roboto Flex,serif;font-weight:lighter;font-size:1.6rem;min-width:320px}.section{background-color:rgba(0,0,0,.914);color:#f5f5f5}.header{color:#f5f5f5;background-image:linear-gradient(45deg,#000,rgba(0,0,0,.9));text-align:center;padding:.3em 0}.header__tittle{font-family:Audiowide,sans-serif;font-size:.9rem}.header__span{color:red}.hero{position:relative;flex-direction:column;background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:scroll;height:50vh;z-index:1;overflow:hidden}.hero,.hero__info{display:flex;justify-content:space-between;align-items:center;width:100%}.hero__info{padding:.2em;flex-direction:row}.hero__text{color:#f5f5f5;font-size:.6rem}.hero__text .fa-phone{margin-right:.4em}.hero__img{width:150px;height:125px;opacity:.5}.hero__lamp,.hero__lamp2,.hero__lamp3,.hero__lamp4{left:885px;top:212px;position:absolute;width:23px;height:23px;background-color:#fff;border-radius:50%;box-shadow:0 0 50px hsla(0,0%,100%,.7);opacity:0;filter:blur(20px);animation:a 1s ease-in-out 0s 3 alternate}.hero__lamp2{left:130px;top:100px}.hero__lamp3{left:235px;top:100px}.hero__lamp4{left:255px;top:100px}@keyframes a{0%{opacity:0;filter:blur(20px);box-shadow:0 0 50px hsla(0,0%,100%,.1)}50%{opacity:1;filter:blur(5px);box-shadow:0 0 100px #fff}to{opacity:0;filter:blur(20px);box-shadow:0 0 50px hsla(0,0%,100%,.1)}}.info__icon{font-size:1rem;padding:.5em 0}.info__cards{justify-content:space-around;width:100vw}.info__card,.info__cards{display:flex;align-items:center}.info__card{color:#f5f5f5;justify-content:center;flex-direction:column;text-align:center;width:200px;border-radius:8px;padding:.5em 1em}.info__header{font-size:.7rem;color:#fff}.info__card:first-child,.info__card:nth-child(2){opacity:0;animation:b 2s ease-out forwards}.info__card:nth-child(2){animation-delay:1s}.info__card:nth-child(3){opacity:0;animation:b 2s ease-out forwards;animation-delay:2s}@keyframes b{0%{opacity:0}to{opacity:1}}.review{padding:.5em 1em;background-color:#000;display:flex;justify-content:center;align-items:center;flex-direction:row}.review__text{font-size:.8rem;font-weight:700;margin-left:2em}.review__tittle{text-align:center;font-family:Audiowide,sans-serif;font-size:.6rem;margin-right:1em}.review__box{position:relative}.review__box,.review__info{display:flex;justify-content:center;align-items:center;flex-direction:row;font-size:1.2rem}.review a{margin-right:1em}.review a img{position:absolute;top:-12px;left:-20px;width:45px;height:40px}.review__info{margin-right:2em}.about__title{font-family:Audiowide,sans-serif;font-size:1.2rem;padding:.3em .5em;border-bottom:1px solid #fff}.about__box{display:flex;justify-content:center;align-items:center;flex-direction:column;width:100%}.about__img{width:250px;margin-top:.5em;border-radius:8px;box-shadow:5px 5px 10px hsla(0,0%,100%,.2)}.about__list{list-style:none;padding:.5em 0}.about__list--item{font-size:.8rem;margin-bottom:.5em}.logo{background-color:#000;height:50px}.logo__box{display:flex;justify-content:space-evenly;align-items:center;overflow:hidden}.logo__img{width:50px;height:50px}.logo__img--bmw{height:55px}.logo__img--toyota{height:45px}.logo__img--nissan{height:35px}.services{background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.services__boxes{justify-content:center;padding:.5em 1em}.service__box,.services__boxes{display:flex;align-items:center;flex-direction:column}.service__box{justify-content:space-between;background:hsla(0,0%,100%,.1);text-align:center;border-radius:10px;padding:1em .5em;transition:outline,box-shadow 1s;margin:1em 0 .5em}.service__box:hover{box-shadow:10px 10px 30px hsla(0,0%,100%,.3)}.service__tittle{font-size:1rem;font-family:Audiowide,sans-serif;text-transform:uppercase;color:grey;border-bottom:1px solid #f5f5f5;margin-bottom:2em;padding:.5em 0}.service__text{font-size:.8rem;padding:.5em}.opinions__box{display:flex;justify-content:center;align-items:center;padding:.5em 1em}.opinion__box{border:1px solid wheat;border-radius:8px;margin-bottom:1em}.opinion__name{font-size:.9rem;padding:.5em 0;text-align:center}.opinion__text{text-align:center;font-size:.8rem;padding:.5em}.opinion__stars{color:#daa520;text-align:center;font-size:.7rem;padding:.5em 0}@media (min-width:390px){.header__tittle{font-size:1rem}.hero__info{padding:.4em}.hero__text{font-size:.9rem}.hero__img{width:250px;height:200px}.hero .fa-phone{font-size:.7rem}.info__icon{font-size:1.2rem}.info__header{font-size:.8rem}.review__tittle{font-size:.9rem}.review__text{margin-left:2em;font-size:1rem}.review a{margin-right:1em}.review a img{top:-15px;left:-18px;width:55px;height:50px}.about__title{font-size:1.2rem}.about__img{width:300px}.about__list--item{padding:.3em 0;font-size:.8rem}.about i{padding:0 .5em}}@media (min-width:430px){.about__img{width:350px}.about__list--item{font-size:1rem}.service__tittle{font-size:1.2rem}.service__text{font-size:1rem}}@media (min-width:576px){.header__tittle{font-size:1.6rem}.review__text,.review__tittle{font-size:1.2rem}.review a img{top:-13px;left:-15px}.hero .fa-phone,.hero__text{font-size:1.2rem}.info__icon{font-size:1.6rem}.info__header{font-size:1.2rem}.about__title{font-size:1.6rem}.about__img{width:400px}.about__list--item{font-size:1.3rem}.logo{height:100%}.logo__img{width:70px}.logo__img,.logo__img--toyota{height:70px}.logo__img--nissan{width:75px;height:55px}}@media (min-width:670px){.about__title{font-size:2rem;padding:.2em .5em}.about__box{flex-direction:row;padding:.5em 1em}.about__img{width:300px}.about__list{padding:0 .5em}.about__list--item{padding:.1em 0;font-size:1rem}.about i{padding:0 .5em}.logo__img--nissan{width:80px;height:55px}.service__tittle{font-size:1.4rem}.service__text{font-size:1.2rem}}@media (min-width:768px){.header__tittle{font-size:2rem}.hero{height:70vh}.hero__img{width:350px;height:300px}.hero .fa-phone,.hero__text,.review__text,.review__tittle{font-size:1.6rem}.review a img{top:-11px;left:-13px;width:65px;height:55px}.info__header,.info__icon{font-size:1.6rem}.about__title{font-size:2rem;padding:.2em .5em}.about__box{padding:.5em 1em}.about__img{width:350px}.about__list--item{font-size:1.3rem}.services{background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.services__boxes{display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;flex-wrap:wrap}.services .service__tittle{font-family:Audiowide,sans-serif;text-transform:uppercase;font-size:1.3rem;color:grey;border-bottom:1px solid #f5f5f5;padding:.5em 0}.services .service__text{font-size:1rem;text-transform:capitalize}.services .service__box{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background:hsla(0,0%,100%,.1);text-align:center;width:200px;height:300px;border:none;border-radius:10px;transition:.3s}.services .service__box:hover{box-shadow:5px 5px 30px hsla(0,0%,100%,.3)}.services .service__boxes--bottom,.services .service__boxes--top{width:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;margin:1em 0}}@media (min-width:900px){.about__box{padding:.5em 1em}.about__img{width:450px}.about__list--item{margin-bottom:.5em;font-size:1.4rem}}@media (min-width:992px){.hero{height:auto}.hero__img{width:450px;height:400px}.review__tittle{font-size:2rem}.review__text{font-size:1.6rem}.review a img{top:-16px;left:-20px;width:75px;height:65px}.info__header,.info__icon{font-size:1.6rem}.about__title{font-size:2.2rem}.about__box{padding:.5em 1em}.about__img{width:500px}.about__list--item{margin-bottom:1em;font-size:1.6rem}.services{background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.services__boxes{display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;flex-wrap:wrap;padding:1em}.services .service__tittle{font-family:Audiowide,sans-serif;text-transform:uppercase;font-size:1.6rem;color:grey;border-bottom:1px solid #f5f5f5;padding:.5em 0}.services .service__text{font-size:1.1rem;text-transform:capitalize}.services .service__box{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background:hsla(0,0%,100%,.1);text-align:center;width:250px;height:350px;border:none;border-radius:10px;padding:1em .5em;transition:.3s}.services .service__box:hover{box-shadow:5px 5px 30px hsla(0,0%,100%,.3)}.services .service__boxes--bottom,.services .service__boxes--top{width:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;margin:2em 0}}@media (min-width:1024px){.about__box{padding:.5em 1em;display:flex;justify-content:space-around;align-items:center;width:100%}.about__title{font-size:2.5rem}.about__box{padding:1em}.about__img{width:550px}.about__list--item{font-size:1.6rem}}@media (min-width:1200px){.header__tittle{font-size:2rem}.header__text{font-size:1.6rem}.hero{background-attachment:fixed;height:auto}.review__text{margin-left:3em}.review__tittle{font-size:2rem}.review a img{top:-25px;left:-25px;width:120px;height:90px}.review__text{font-size:2rem}.info__icon{font-size:3rem}.info__header{font-size:2rem}.about__box{padding:.5em 1em;display:flex;justify-content:space-around;align-items:center;width:100%}.about__title{font-size:2.5rem}.about__box{padding:1em}.about__img{width:650px}.about__list--item{font-size:1.6rem}.logo__img{width:100px}.logo__img,.logo__img--toyota{height:100px}.logo__img--nissan{width:130px;height:85px}}@media (min-width:1400px){.header__tittle{font-size:3rem}.hero__text{font-size:2rem;padding:.5em}.hero__lamp2{left:630px;top:210px}.hero__lamp3{left:660px;top:210px}.hero__lamp4{left:853px;top:213px}.about__title{font-size:3rem}.about__img{width:750px}.about__list--item{font-size:2rem}.service__tittle{font-family:Audiowide,sans-serif;text-transform:uppercase;font-size:1.6rem;color:grey;border-bottom:1px solid #f5f5f5;padding:.5em 0}.service__text{font-size:1.1rem;text-transform:capitalize}.service__box{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background:hsla(0,0%,100%,.1);text-align:center;width:250px;height:350px;border:none;border-radius:10px;padding:1em .5em;transition:.3s}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
