*,:after,:before{margin:0;padding:0;box-sizing:border-box}html{scroll-behavior:smooth}body{font-family:Roboto Flex,serif;font-weight:lighter;font-size:1.6rem}.section{background-color:rgba(0,0,0,.914);color:#f5f5f5}.header{color:#f5f5f5;background-image:linear-gradient(45deg,#000,rgba(0,0,0,.9));text-align:center;padding:.3em 0}.header__tittle{font-family:Audiowide,sans-serif;font-size:.9rem}.header__span{color:red}.hero{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:scroll;height:50vh;z-index:1;overflow:hidden}.hero,.hero__info{position:relative;width:100%}.hero__info{padding:.2em}.hero__text{color:#f5f5f5;font-size:.6rem}.hero__text .fa-phone{position:absolute;top:15px;right:85px;font-size:.4rem}.hero__tele{position:absolute;display:block;font-family:Audiowide,sans-serif;font-size:.6rem;text-decoration:none;color:#f5f5f5}.hero__tele--first{top:5px;right:10px}.hero__tele--second{top:20px;right:10px}.hero__img{width:150px;height:125px;opacity:.5}.hero__lamp,.hero__lamp2,.hero__lamp3,.hero__lamp4{left:885px;top:212px;position:absolute;width:23px;height:23px;background-color:#fff;border-radius:50%;box-shadow:0 0 50px hsla(0,0%,100%,.7);opacity:0;filter:blur(20px);animation:a 1s ease-in-out 0s 3 alternate}.hero__lamp2{left:130px;top:100px}.hero__lamp3{left:235px;top:100px}.hero__lamp4{left:255px;top:100px}@keyframes a{0%{opacity:0;filter:blur(20px);box-shadow:0 0 50px hsla(0,0%,100%,.1)}50%{opacity:1;filter:blur(5px);box-shadow:0 0 100px #fff}to{opacity:0;filter:blur(20px);box-shadow:0 0 50px hsla(0,0%,100%,.1)}}.info__icon{font-size:1rem;padding:.5em 0}.info__cards{justify-content:space-around;width:100vw}.info__card,.info__cards{display:flex;align-items:center}.info__card{color:#f5f5f5;justify-content:center;flex-direction:column;text-align:center;width:200px;border-radius:8px;padding:.5em 1em}.info__header{font-size:.7rem;color:#fff}.info__card:first-child,.info__card:nth-child(2){opacity:0;animation:b 2s ease-out forwards}.info__card:nth-child(2){animation-delay:1s}.info__card:nth-child(3){opacity:0;animation:b 2s ease-out forwards;animation-delay:2s}@keyframes b{0%{opacity:0}to{opacity:1}}.review{padding:.5em 1em;background-color:#000;display:flex;justify-content:center;align-items:center;flex-direction:row}.review__text{font-size:.8rem;font-weight:700;margin-left:2em}.review__tittle{text-align:center;font-family:Audiowide,sans-serif;font-size:.6rem;margin-right:1em}.review__box{position:relative}.review__box,.review__info{display:flex;justify-content:center;align-items:center;flex-direction:row;font-size:1.2rem}.review a{margin-right:1em}.review a img{position:absolute;top:-12px;left:-20px;width:45px;height:40px}.review__info{margin-right:2em}.about__title{font-family:Audiowide,sans-serif;font-size:1.2rem;padding:.3em .5em;border-bottom:1px solid #fff}.about__box{display:flex;justify-content:center;align-items:center;flex-direction:column;width:100%}.about__img{width:250px;margin-top:.5em;border-radius:8px;box-shadow:5px 5px 10px hsla(0,0%,100%,.2)}.about__list{list-style:none;padding:.5em 0}.about__list--item{font-size:.8rem;margin-bottom:.5em}.logo{background-color:#000;height:50px}.logo__box{display:flex;justify-content:space-evenly;align-items:center;overflow:hidden}.logo__img{width:50px;height:50px}.logo__img--bmw{height:55px}.logo__img--toyota{height:45px}.logo__img--nissan{height:35px}.services{background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.services__boxes{justify-content:center;padding:.5em 1em}.service__box,.services__boxes{display:flex;align-items:center;flex-direction:column}.service__box{justify-content:space-between;background:hsla(0,0%,100%,.1);text-align:center;border-radius:10px;padding:1em .5em;transition:outline,box-shadow 1s;margin:1em 0 .5em}.service__box:hover{box-shadow:10px 10px 30px hsla(0,0%,100%,.3)}.service__tittle{font-size:1rem;font-family:Audiowide,sans-serif;text-transform:uppercase;color:grey;border-bottom:1px solid #f5f5f5;margin-bottom:2em;padding:.5em 0}.service__text{font-size:.8rem;padding:.5em}.opinions{background-color:#000;color:#f5f5f5;padding:1em 0;border-top:1px solid #f5f5f5}.opinions__box{padding:.5em 1em}.opinion__box{margin-top:.5em;position:relative;border-top:1px solid wheat;border-bottom:1px solid wheat;height:110px}.opinion__name{background-color:#000;z-index:1;position:absolute;top:-15px;left:10px;font-size:.8rem;padding:.5em 0;text-align:center}.opinion__text{text-align:center;font-size:.7rem;padding:1em}.opinion__stars{position:absolute;background-color:#000;top:-15px;left:180px;color:#daa520;text-align:center;font-size:.8rem;padding:.5em 0}.contact__box,.contact__telephone{display:flex;justify-content:center;align-items:center;flex-direction:column}.contact__privacy{text-align:center;font-size:.5rem;padding:1em 2em}.contact__privacy--link{font-weight:700;color:#f5f5f5;text-decoration:none}.contact__title{font-family:Audiowide,sans-serif;font-size:1.3rem;padding:.5em 0}.contact__text{font-size:1rem;padding:.2em 0}.contact__text--tel{color:#f5f5f5;text-decoration:none}.contact__map{display:flex;justify-content:center;align-items:center;flex-direction:column;padding:1em 0}.contact__map-frame{width:80vw;height:50vh;border-radius:8px}.contact__details{text-align:center;padding:1em 0;border-top:1px solid #f5f5f5}.footer{background-color:#000}.footer__text{color:#f5f5f5;text-align:center;font-size:1rem;padding:.3em 0}.footer__credits{display:block;color:#f5f5f5;font-size:.5rem;text-decoration:none;padding:.2em}@media (min-width:390px){.header__tittle{font-size:1rem}.hero__info{padding:.4em}.hero__text{font-size:.9rem}.hero__img{width:250px;height:200px}.hero .fa-phone{font-size:.7rem}.info__icon{font-size:1.2rem}.info__header{font-size:.8rem}.review__tittle{font-size:.9rem}.review__text{margin-left:2em;font-size:1rem}.review a{margin-right:1em}.review a img{top:-15px;left:-18px;width:55px;height:50px}.about__title{font-size:1.2rem}.about__img{width:300px}.about__list--item{padding:.3em 0;font-size:.8rem}.about i{padding:0 .5em}.opinion__name{top:-17px;left:10px;font-size:.9rem}.opinion__text{font-size:.8rem}.opinion__stars{top:-17px;left:220px;font-size:.9rem}}@media (min-width:430px){.about__img{width:350px}.about__list--item{font-size:1rem}.service__tittle{font-size:1.2rem}.service__text{font-size:1rem}.opinion__stars{top:-17px;left:260px}.contact__privacy{font-size:.7rem}}@media (min-width:480px){.opinion__stars{top:-18px;left:300px}.contact__title{font-size:1.5rem;padding:.5em 0}.contact__text{font-size:1.2rem}}@media (min-width:576px){.header__tittle{font-size:1.6rem}.review__text,.review__tittle{font-size:1.2rem}.review a img{top:-13px;left:-15px}.hero .fa-phone,.hero__text{font-size:1.2rem}.hero .fa-phone{top:25px;right:150px}.hero__tele{font-size:1.2rem}.hero__tele--first{top:10px}.hero__tele--second{top:35px}.info__icon{font-size:1.6rem}.info__header{font-size:1.2rem}.about__title{font-size:1.6rem}.about__img{width:400px}.about__list--item{font-size:1.3rem}.logo{height:100%}.logo__img{width:70px}.logo__img,.logo__img--toyota{height:70px}.logo__img--nissan{width:75px;height:55px}.opinion__name{top:-18px;left:10px;font-size:1rem}.opinion__text{font-size:.9rem}.opinion__stars{top:-19px;left:400px;font-size:1rem}}@media (min-width:670px){.about__title{font-size:2rem;padding:.2em .5em}.about__box{flex-direction:row;padding:.5em 1em}.about__img{width:300px}.about__list{padding:0 .5em}.about__list--item{padding:.1em 0;font-size:1rem}.about i{padding:0 .5em}.logo__img--nissan{width:80px;height:55px}.service__tittle{font-size:1.4rem}.service__text{font-size:1.2rem}.opinion__name{top:-19px;left:15px;font-size:1.1rem}.opinion__text{font-size:1rem}.opinion__stars{top:-20px;left:480px;font-size:1.1rem}}@media (min-width:768px){.header__tittle{font-size:2rem}.hero{height:70vh}.hero__img{width:350px;height:300px}.hero .fa-phone,.hero__text{font-size:1.6rem}.hero .fa-phone{top:30px;right:210px}.hero__tele{font-size:1.6rem}.hero__tele--first{right:20px}.hero__tele--second{top:45px;right:20px}.review__text,.review__tittle{font-size:1.6rem}.review a img{top:-11px;left:-13px;width:65px;height:55px}.info__header,.info__icon{font-size:1.6rem}.about__title{font-size:2rem;padding:.2em .5em}.about__box{padding:.5em 1em}.about__img{width:350px}.about__list--item{font-size:1.3rem}.services{background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.services__boxes{display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;flex-wrap:wrap}.services .service__tittle{font-family:Audiowide,sans-serif;text-transform:uppercase;font-size:1.3rem;color:grey;border-bottom:1px solid #f5f5f5;padding:.5em 0}.services .service__text{font-size:1rem;text-transform:capitalize}.services .service__box{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background:hsla(0,0%,100%,.1);text-align:center;width:200px;height:300px;border:none;border-radius:10px;transition:.3s}.services .service__box:hover{box-shadow:5px 5px 30px hsla(0,0%,100%,.3)}.services .service__boxes--bottom,.services .service__boxes--top{width:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;margin:1em 0}.opinion__name{top:-22px;left:15px;font-size:1.2rem}.opinion__text{font-size:1.1rem}.opinion__stars{top:-22px;left:540px;font-size:1.2rem}.contact__box{display:flex;justify-content:space-evenly;align-items:center;flex-direction:row}.contact__title{font-family:Audiowide,sans-serif;font-size:1.4rem;padding:.5em 0}.contact__text{font-size:1.2rem}.contact__map{width:55vw;display:flex;justify-content:center;align-items:center;flex-direction:column;padding:1em 2em}.contact__details,.contact__map-frame{width:50vw;height:50vh}.contact__details{display:flex;justify-content:space-around;align-items:center;flex-direction:column;padding:.5em 1em;border-top:none}.contact__privacy{text-align:left;font-size:.7rem}}@media (min-width:900px){.about__box{padding:.5em 1em}.about__img{width:450px}.about__list--item{margin-bottom:.5em;font-size:1.4rem}.opinion__stars{top:-22px;left:680px}}@media (min-width:992px){.hero{height:auto}.hero__img{width:450px;height:400px}.review__tittle{font-size:2rem}.review__text{font-size:1.6rem}.review a img{top:-16px;left:-20px;width:75px;height:65px}.info__header,.info__icon{font-size:1.6rem}.about__title{font-size:2.2rem}.about__box{padding:.5em 1em}.about__img{width:500px}.about__list--item{margin-bottom:1em;font-size:1.6rem}.services{background-image:linear-gradient(45deg,rgba(0,0,0,.4),rgba(0,0,0,.5)),url(/dist/img/background_header2.png);background-position:50%;background-size:cover;background-repeat:no-repeat;background-attachment:fixed}.services__boxes{display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;flex-wrap:wrap;padding:1em}.services .service__tittle{font-family:Audiowide,sans-serif;text-transform:uppercase;font-size:1.6rem;color:grey;border-bottom:1px solid #f5f5f5;padding:.5em 0}.services .service__text{font-size:1.1rem;text-transform:capitalize}.services .service__box{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background:hsla(0,0%,100%,.1);text-align:center;width:250px;height:350px;border:none;border-radius:10px;padding:1em .5em;transition:.3s}.services .service__box:hover{box-shadow:5px 5px 30px hsla(0,0%,100%,.3)}.services .service__boxes--bottom,.services .service__boxes--top{width:100%;display:flex;justify-content:space-evenly;align-items:center;flex-direction:row;margin:2em 0}.opinion__box{margin-right:1em;height:160px}.opinion__name{top:-21px;left:15px;font-size:1.2rem}.opinion__text{margin:.3em auto;font-size:1.1rem}.opinion__stars{top:-24px;left:310px;font-size:1.2rem}}@media (min-width:1024px){.about__box{padding:.5em 1em;display:flex;justify-content:space-around;align-items:center;width:100%}.about__title{font-size:2.5rem}.about__box{padding:1em}.about__img{width:550px}.about__list--item{font-size:1.6rem}.opinion__stars{top:-23px}.contact__title{font-size:1.6rem}.contact__text{font-size:1.4rem}.contact__map{width:65vw}.contact__map-frame{width:60vw;height:50vh}}@media (min-width:1200px){.header__tittle{font-size:2rem}.header__text{font-size:1.6rem}.hero{background-attachment:fixed;height:auto}.review__text{margin-left:3em}.review__tittle{font-size:2rem}.review a img{top:-25px;left:-25px;width:120px;height:90px}.review__text{font-size:2rem}.info__icon{font-size:3rem}.info__header{font-size:2rem}.about__box{padding:.5em 1em;display:flex;justify-content:space-around;align-items:center;width:100%}.about__title{font-size:2.5rem}.about__box{padding:1em}.about__img{width:650px}.about__list--item{font-size:1.6rem}.logo__img{width:100px}.logo__img,.logo__img--toyota{height:100px}.logo__img--nissan{width:130px;height:85px}.opinion__name{top:-21px;left:15px;font-size:1.4rem}.opinion__text{margin:.5em auto;font-size:1.2rem}.opinion__stars{top:-26px;left:390px;font-size:1.4rem}.contact__title{font-size:2rem}.contact__text{font-size:1.6rem}.contact__map-frame{width:60vw;height:60vh}}@media (min-width:1400px){.header__tittle{font-size:3rem}.hero__text{font-size:2rem;padding:.5em}.hero__lamp2{left:630px;top:210px}.hero__lamp3{left:660px;top:210px}.hero__lamp4{left:853px;top:213px}.hero .fa-phone{top:45px;right:210px}.hero .fa-phone,.hero__tele{font-size:1.6rem}.hero__tele--first{top:30px;right:20px}.hero__tele--second{top:65px;right:20px}.about__title{font-size:3rem}.about__img{width:750px}.about__list--item{font-size:2rem}.service__tittle{font-family:Audiowide,sans-serif;text-transform:uppercase;font-size:1.6rem;color:grey;border-bottom:1px solid #f5f5f5;padding:.5em 0}.service__text{font-size:1.1rem;text-transform:capitalize}.service__box{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background:hsla(0,0%,100%,.1);text-align:center;width:250px;height:350px;border:none;border-radius:10px;padding:1em .5em;transition:.3s}.opinion__name{top:-28px;left:20px;font-size:1.6rem}.opinion__text{margin:1em auto;font-size:1.4rem}.opinion__stars{top:-28px;left:600px;font-size:1.6rem}}@media (min-width:2000px){.header__tittle{font-size:3rem}.hero__text{font-size:2rem;padding:.5em}.hero__lamp2{left:630px;top:210px}.hero__lamp3{left:660px;top:210px}.hero__lamp4{left:853px;top:213px}.about__title{font-size:3rem}.about__img{width:750px}.about__list--item{font-size:2rem}.service__tittle{font-family:Audiowide,sans-serif;text-transform:uppercase;font-size:1.6rem;color:grey;border-bottom:1px solid #f5f5f5;padding:.5em 0}.service__text{font-size:1.1rem;text-transform:capitalize}.service__box{display:flex;justify-content:space-between;align-items:center;flex-direction:column;background:hsla(0,0%,100%,.1);text-align:center;width:250px;height:350px;border:none;border-radius:10px;padding:1em .5em;transition:.3s}.opinion__name{top:-28px;left:20px;font-size:1.6rem}.opinion__text{margin:1em auto;font-size:1.4rem}.opinion__stars{top:-28px;left:1100px;font-size:1.6rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXNlLnNjc3MiLCJzdHlsZS5jc3MiLCJfY29tcG9uZW50cy5zY3NzIiwiX2V4dHJhc21hbGwuc2NzcyIsIl9zbWFsbC5zY3NzIiwiX21lZGl1bS5zY3NzIiwiX2xhcmdlLnNjc3MiLCJfZXh0cmFsYXJnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUdJLFNBQUEsQUFDQSxVQUFBLEFBQ0EscUJBQUEsQ0NFSixBRENBLEtBQ0ksc0JBQUEsQ0NFSixBRENBLEtBQ0ksOEJBQUEsQUFDQSxvQkFBQSxBQUNBLGdCQUFBLENDRUosQUNqQkEsU0FDSSxrQ0FBQSxBQUNBLGFBQUEsQ0RvQkosQUVuQkEsUUFHSSxjQUFBLEFBQ0EsNERBQUEsQUFDQSxrQkFBQSxBQUNBLGNBQUEsQ0ZvQkosQUVsQkksZ0JBQ0ksaUNBQUEsQUFDQSxlQUFBLENGb0JSLEFFaEJJLGNBQ0ksU0FBQSxDRmtCUixBRWJBLE1BRUksYUFBQSxBQUNBLDhCQUFBLEFBQ0EsbUJBQUEsQUFDQSxzQkFBQSxBQUNBLDRHQUFBLEFBRUEsd0JBQUEsQUFDQSxzQkFBQSxBQUNBLDRCQUFBLEFBQ0EsNkJBQUEsQUFFQSxZQUFBLEFBQ0EsVUFBQSxBQUNBLGVBQUEsQ0ZlSixBRVpJLGtCQWpCQSxrQkFBQSxBQVdBLFVBQUEsQ0FNQSxBRmlCSixZRWZRLFlBQUEsQ0ZlUixBRVhJLFlBQ0ksY0FBQSxBQUNBLGVBQUEsQ0ZhUixBRVhRLHNCQUNJLGtCQUFBLEFBQ0EsU0FBQSxBQUNBLFdBQUEsQUFDQSxlQUFBLENGYVosQUVQSSxZQUNJLGtCQUFBLEFBQ0EsY0FBQSxBQUNBLGlDQUFBLEFBQ0EsZ0JBQUEsQUFDQSxxQkFBQSxBQUNBLGFBQUEsQ0ZTUixBRVBRLG1CQUNJLFFBQUEsQUFDQSxVQUFBLENGU1osQUVOUSxvQkFDSSxTQUFBLEFBQ0EsVUFBQSxDRlFaLEFFRkksV0FDSSxZQUFBLEFBQ0EsYUFBQSxBQUNBLFVBQUEsQ0ZJUixBRURJLG1EQUlJLFdBQUEsQUFDQSxVQUFBLEFB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Q0ksV0FBQSxDTisrQlYsQU16K0JVLG1CQUNJLGNBQUEsQ04yK0JkLEFNcitCTSxpQkFDSSxpQ0FBQSxBQUNBLHlCQUFBLEFBQ0EsaUJBQUEsQUFDQSxXQUFBLEFBQ0EsZ0NBQUEsQUFDQSxjQUFBLENOdStCVixBTXArQk0sZUFDSSxpQkFBQSxBQUNBLHlCQUFBLENOcytCVixBTW4rQk0sY0FDSSxhQUFBLEFBQ0EsOEJBQUEsQUFDQSxtQkFBQSxBQUNBLHNCQUFBLEFBQ0EsOEJBQUEsQUFDQSxrQkFBQSxBQUNBLFlBQUEsQUFDQSxhQUFBLEFBQ0EsWUFBQSxBQUNBLG1CQUFBLEFBQ0EsaUJBQUEsQUFDQSxjQUFBLENOcStCVixBTTM5Qk0sZUFDSSxVQUFBLEFBQ0EsVUFBQSxBQUNBLGdCQUFBLENONjlCVixBTTE5Qk0sZUFDSSxnQkFBQSxBQUNBLGdCQUFBLENONDlCVixBTXo5Qk0sZ0JBQ0ksVUFBQSxBQUNBLFlBQUEsQUFDQSxnQkFBQSxDTjI5QlYsQ0FDRiIsImZpbGUiOiJzdHlsZS5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKixcclxuKjo6YWZ0ZXIsXHJcbio6OmJlZm9yZSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxufVxyXG5cclxuaHRtbCB7XHJcbiAgICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcclxufVxyXG5cclxuYm9keSB7XHJcbiAgICBmb250LWZhbWlseTogXCJSb2JvdG8gRmxleFwiLCBzZXJpZjtcclxuICAgIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbn0iLCJAY2hhcnNldCBcIlVURi04XCI7XG4qLFxuKjo6YWZ0ZXIsXG4qOjpiZWZvcmUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbmh0bWwge1xuICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDtcbn1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIlJvYm90byBGbGV4XCIsIHNlcmlmO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgZm9udC1zaXplOiAxLjZyZW07XG59XG5cbi5zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjkxNCk7XG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xufVxuXG4uaGVhZGVyIHtcbiAgY29sb3I6IHdoaXRlc21va2U7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiKDAsIDAsIDApLCByZ2JhKDAsIDAsIDAsIDAuOSkpO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAuM2VtIDA7XG59XG4uaGVhZGVyX190aXR0bGUge1xuICBmb250LWZhbWlseTogXCJBdWRpb3dpZGVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjlyZW07XG59XG4uaGVhZGVyX19zcGFuIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuLmhlcm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuNCksIHJnYmEoMCwgMCwgMCwgMC41KSksIHVybChcIi9kaXN0L2ltZy9iYWNrZ3JvdW5kX2hlYWRlcjIucG5nXCIpO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiA1MHZoO1xuICB6LWluZGV4OiAyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmhlcm9fX2luZm8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDAuMmVtO1xuICB3aWR0aDogMTAwJTtcbn1cbi5oZXJvX190ZXh0IHtcbiAgY29sb3I6IHdoaXRlc21va2U7XG4gIGZvbnQtc2l6ZTogMC42cmVtO1xufVxuLmhlcm9fX3RleHQgLmZhLXBob25lIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDE1cHg7XG4gIHJpZ2h0OiA4NXB4O1xuICBmb250LXNpemU6IDAuNHJlbTtcbn1cbi5oZXJvX190ZWxlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1mYW1pbHk6IFwiQXVkaW93aWRlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMC42cmVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xufVxuLmhlcm9fX3RlbGUtLWZpcnN0IHtcbiAgdG9wOiA1cHg7XG4gIHJpZ2h0OiAxMHB4O1xufVxuLmhlcm9fX3RlbGUtLXNlY29uZCB7XG4gIHRvcDogMjBweDtcbiAgcmlnaHQ6IDEwcHg7XG59XG4uaGVyb19faW1nIHtcbiAgd2lkdGg6IDE1MHB4O1xuICBoZWlnaHQ6IDEyNXB4O1xuICBvcGFjaXR5OiAwLjU7XG59XG4uaGVyb19fbGFtcCwgLmhlcm9fX2xhbXAyLCAuaGVyb19fbGFtcDMsIC5oZXJvX19sYW1wNCB7XG4gIGxlZnQ6IDg4NXB4O1xuICB0b3A6IDIxMnB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAyM3B4O1xuICBoZWlnaHQ6IDIzcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJveC1zaGFkb3c6IDBweCAwcHggNTBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG4gIG9wYWNpdHk6IDA7XG4gIGZpbHRlcjogYmx1cigyMHB4KTtcbiAgYW5pbWF0aW9uOiBsaWdodFVwIDFzIGVhc2UtaW4tb3V0IDBzIDMgYWx0ZXJuYXRlO1xufVxuLmhlcm9fX2xhbXAyIHtcbiAgbGVmdDogMTMwcHg7XG4gIHRvcDogMTAwcHg7XG59XG4uaGVyb19fbGFtcDMge1xuICBsZWZ0OiAyMzVweDtcbiAgdG9wOiAxMDBweDtcbn1cbi5oZXJvX19sYW1wNCB7XG4gIGxlZnQ6IDI1NXB4O1xuICB0b3A6IDEwMHB4O1xufVxuXG5Aa2V5ZnJhbWVzIGxpZ2h0VXAge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICBmaWx0ZXI6IGJsdXIoMjBweCk7XG4gICAgLyogTW9jbm8gcm96bXl0ZSBuYSBwb2N6xIV0a3UgKi9cbiAgICBib3gtc2hhZG93OiAwcHggMHB4IDUwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICAgIC8qIFPFgmFibyB3aWRvY3pueSBjaWXFhCAqL1xuICB9XG4gIDUwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBmaWx0ZXI6IGJsdXIoNXB4KTtcbiAgICAvKiBNbmllanN6ZSByb3pteWNpZSAqL1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTAwcHggcmdiKDI1NSwgMjU1LCAyNTUpO1xuICAgIC8qIMWad2lhdMWCbyBzdGFqZSBzacSZIG1vY25pZWpzemUgKi9cbiAgfVxuICAxMDAlIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIGZpbHRlcjogYmx1cigyMHB4KTtcbiAgICAvKiBSb3pteWNpZSB3cmFjYSAqL1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggNTBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgLyogWm1uaWVqc3pvbmUgxZt3aWF0xYJvICovXG4gIH1cbn1cbi5pbmZvX19pY29uIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBwYWRkaW5nOiAwLjVlbSAwO1xufVxuLmluZm9fX2NhcmRzIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDB2dztcbn1cbi5pbmZvX19jYXJkIHtcbiAgY29sb3I6IHdoaXRlc21va2U7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHdpZHRoOiAyMDBweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG59XG4uaW5mb19faGVhZGVyIHtcbiAgZm9udC1zaXplOiAwLjdyZW07XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmluZm9fX2NhcmQ6bnRoLWNoaWxkKDEpIHtcbiAgb3BhY2l0eTogMDtcbiAgYW5pbWF0aW9uOiBmYWRlSW4gMnMgZWFzZS1vdXQgZm9yd2FyZHM7XG4gIC8qIEthcnRhIDEgcG9qYXdpYSBzacSZIHBvIDIgc2VrdW5kYWNoICovXG59XG5cbi5pbmZvX19jYXJkOm50aC1jaGlsZCgyKSB7XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogZmFkZUluIDJzIGVhc2Utb3V0IGZvcndhcmRzO1xuICBhbmltYXRpb24tZGVsYXk6IDFzO1xuICAvKiBLYXJ0YSAyIHBvamF3aWEgc2nEmSBwbyA0IHNla3VuZGFjaCAqL1xufVxuXG4uaW5mb19fY2FyZDpudGgtY2hpbGQoMykge1xuICBvcGFjaXR5OiAwO1xuICBhbmltYXRpb246IGZhZGVJbiAycyBlYXNlLW91dCBmb3J3YXJkcztcbiAgYW5pbWF0aW9uLWRlbGF5OiAycztcbiAgLyogS2FydGEgMyBwb2phd2lhIHNpxJkgcG8gNiBzZWt1bmRhY2ggKi9cbn1cblxuQGtleWZyYW1lcyBmYWRlSW4ge1xuICAwJSB7XG4gICAgb3BhY2l0eTogMDtcbiAgICAvKiBFZmVrdCBwcnplc3VuacSZY2lhICovXG4gIH1cbiAgMTAwJSB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxufVxuLnJldmlldyB7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xufVxuLnJldmlld19fdGV4dCB7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luLWxlZnQ6IDJlbTtcbn1cbi5yZXZpZXdfX3RpdHRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1mYW1pbHk6IFwiQXVkaW93aWRlXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMC42cmVtO1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbn1cbi5yZXZpZXdfX2JveCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5yZXZpZXdfX2JveCwgLnJldmlld19faW5mbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBmb250LXNpemU6IDEuMnJlbTtcbn1cbi5yZXZpZXcgYSB7XG4gIG1hcmdpbi1yaWdodDogMWVtO1xufVxuLnJldmlldyBhIGltZyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAtMTJweDtcbiAgbGVmdDogLTIwcHg7XG4gIHdpZHRoOiA0NXB4O1xuICBoZWlnaHQ6IDQwcHg7XG59XG4ucmV2aWV3X19pbmZvIHtcbiAgbWFyZ2luLXJpZ2h0OiAyZW07XG59XG5cbi5hYm91dF9fdGl0bGUge1xuICBmb250LWZhbWlseTogXCJBdWRpb3dpZGVcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIHBhZGRpbmc6IDAuM2VtIDAuNWVtO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGU7XG59XG4uYWJvdXRfX2JveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogMTAwJTtcbn1cbi5hYm91dF9faW1nIHtcbiAgd2lkdGg6IDI1MHB4O1xuICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3gtc2hhZG93OiA1cHggNXB4IDEwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xufVxuLmFib3V0X19saXN0IHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMC41ZW0gMDtcbn1cbi5hYm91dF9fbGlzdC0taXRlbSB7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuLmxvZ28ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbiAgaGVpZ2h0OiA1MHB4O1xufVxuLmxvZ29fX2JveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmxvZ29fX2ltZyB7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDUwcHg7XG59XG4ubG9nb19faW1nLS1ibXcge1xuICBoZWlnaHQ6IDU1cHg7XG59XG4ubG9nb19faW1nLS10b3lvdGEge1xuICBoZWlnaHQ6IDQ1cHg7XG59XG4ubG9nb19faW1nLS1uaXNzYW4ge1xuICBoZWlnaHQ6IDM1cHg7XG59XG5cbi5zZXJ2aWNlcyB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgwLCAwLCAwLCAwLjQpLCByZ2JhKDAsIDAsIDAsIDAuNSkpLCB1cmwoXCIvZGlzdC9pbWcvYmFja2dyb3VuZF9oZWFkZXIyLnBuZ1wiKTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xufVxuLnNlcnZpY2VzX19ib3hlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG59XG5cbi5zZXJ2aWNlX19ib3gge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBwYWRkaW5nOiAxZW0gMC41ZW07XG4gIHRyYW5zaXRpb246IG91dGxpbmUsIGJveC1zaGFkb3cgMXM7XG4gIG1hcmdpbjogMWVtIDAgMC41ZW0gMDtcbn1cbi5zZXJ2aWNlX19ib3g6aG92ZXIge1xuICBib3gtc2hhZG93OiAxMHB4IDEwcHggMzBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG59XG4uc2VydmljZV9fdGl0dGxlIHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LWZhbWlseTogXCJBdWRpb3dpZGVcIiwgc2Fucy1zZXJpZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgY29sb3I6IGdyZXk7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZXNtb2tlO1xuICBtYXJnaW4tYm90dG9tOiAyZW07XG4gIHBhZGRpbmc6IDAuNWVtIDA7XG59XG4uc2VydmljZV9fdGV4dCB7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBwYWRkaW5nOiAwLjVlbTtcbn1cblxuLm9waW5pb25zIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApO1xuICBjb2xvcjogd2hpdGVzbW9rZTtcbiAgcGFkZGluZzogMWVtIDA7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCB3aGl0ZXNtb2tlO1xufVxuLm9waW5pb25zX19ib3gge1xuICBwYWRkaW5nOiAwLjVlbSAxZW07XG59XG5cbi5vcGluaW9uX19ib3gge1xuICBtYXJnaW4tdG9wOiAwLjVlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgd2hlYXQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGVhdDtcbiAgaGVpZ2h0OiAxMTBweDtcbn1cbi5vcGluaW9uX19uYW1lIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApO1xuICB6LWluZGV4OiAyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTE1cHg7XG4gIGxlZnQ6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBwYWRkaW5nOiAwLjVlbSAwO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4ub3Bpbmlvbl9fdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAwLjdyZW07XG4gIHBhZGRpbmc6IDFlbTtcbn1cbi5vcGluaW9uX19zdGFycyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApO1xuICB0b3A6IC0xNXB4O1xuICBsZWZ0OiAxODBweDtcbiAgY29sb3I6IGdvbGRlbnJvZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDAuOHJlbTtcbiAgcGFkZGluZzogMC41ZW0gMDtcbn1cblxuLmNvbnRhY3RfX2JveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmNvbnRhY3RfX3RlbGVwaG9uZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmNvbnRhY3RfX3ByaXZhY3kge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMC41cmVtO1xuICBwYWRkaW5nOiAxZW0gMmVtO1xufVxuLmNvbnRhY3RfX3ByaXZhY3ktLWxpbmsge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IHdoaXRlc21va2U7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5jb250YWN0X190aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDEuM3JlbTtcbiAgcGFkZGluZzogMC41ZW0gMDtcbn1cbi5jb250YWN0X190ZXh0IHtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBwYWRkaW5nOiAwLjJlbSAwO1xufVxuLmNvbnRhY3RfX3RleHQtLXRlbCB7XG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uY29udGFjdF9fbWFwIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmc6IDFlbSAwO1xufVxuLmNvbnRhY3RfX21hcC1mcmFtZSB7XG4gIHdpZHRoOiA4MHZ3O1xuICBoZWlnaHQ6IDUwdmg7XG4gIGJvcmRlci1yYWRpdXM6IDhweDtcbn1cbi5jb250YWN0X19kZXRhaWxzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBwYWRkaW5nOiAxZW0gMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHdoaXRlc21va2U7XG59XG5cbi5mb290ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cbi5mb290ZXJfX3RleHQge1xuICBjb2xvcjogd2hpdGVzbW9rZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDFyZW07XG4gIHBhZGRpbmc6IDAuM2VtIDA7XG59XG4uZm9vdGVyX19jcmVkaXRzIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNvbG9yOiB3aGl0ZXNtb2tlO1xuICBmb250LXNpemU6IDAuNXJlbTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBwYWRkaW5nOiAwLjJlbTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDM5MHB4KSB7XG4gIC5oZWFkZXJfX3RpdHRsZSB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICB9XG4gIC5oZXJvX19pbmZvIHtcbiAgICBwYWRkaW5nOiAwLjRlbTtcbiAgfVxuICAuaGVyb19fdGV4dCB7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gIH1cbiAgLmhlcm9fX2ltZyB7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMjAwcHg7XG4gIH1cbiAgLmhlcm8gLmZhLXBob25lIHtcbiAgICBmb250LXNpemU6IDAuN3JlbTtcbiAgfVxuICAuaW5mb19faWNvbiB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLmluZm9fX2hlYWRlciB7XG4gICAgZm9udC1zaXplOiAwLjhyZW07XG4gIH1cbiAgLnJldmlld19fdGl0dGxlIHtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgfVxuICAucmV2aWV3X190ZXh0IHtcbiAgICBtYXJnaW4tbGVmdDogMmVtO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxuICAucmV2aWV3IGEge1xuICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICB9XG4gIC5yZXZpZXcgYSBpbWcge1xuICAgIHRvcDogLTE1cHg7XG4gICAgbGVmdDogLTE4cHg7XG4gICAgd2lkdGg6IDU1cHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICB9XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogMzAwcHg7XG4gIH1cbiAgLmFib3V0X19saXN0LS1pdGVtIHtcbiAgICBwYWRkaW5nOiAwLjNlbSAwO1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICB9XG4gIC5hYm91dCBpIHtcbiAgICBwYWRkaW5nOiAwIDAuNWVtO1xuICB9XG4gIC5vcGluaW9uX19uYW1lIHtcbiAgICB0b3A6IC0xN3B4O1xuICAgIGxlZnQ6IDEwcHg7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gIH1cbiAgLm9waW5pb25fX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMC44cmVtO1xuICB9XG4gIC5vcGluaW9uX19zdGFycyB7XG4gICAgdG9wOiAtMTdweDtcbiAgICBsZWZ0OiAyMjBweDtcbiAgICBmb250LXNpemU6IDAuOXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDQzMHB4KSB7XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogMzUwcHg7XG4gIH1cbiAgLmFib3V0X19saXN0LS1pdGVtIHtcbiAgICBmb250LXNpemU6IDFyZW07XG4gIH1cbiAgLnNlcnZpY2VfX3RpdHRsZSB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLnNlcnZpY2VfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxuICAub3Bpbmlvbl9fc3RhcnMge1xuICAgIHRvcDogLTE3cHg7XG4gICAgbGVmdDogMjYwcHg7XG4gIH1cbiAgLmNvbnRhY3RfX3ByaXZhY3kge1xuICAgIGZvbnQtc2l6ZTogMC43cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIHtcbiAgLm9waW5pb25fX3N0YXJzIHtcbiAgICB0b3A6IC0xOHB4O1xuICAgIGxlZnQ6IDMwMHB4O1xuICB9XG4gIC5jb250YWN0X190aXRsZSB7XG4gICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgcGFkZGluZzogMC41ZW0gMDtcbiAgfVxuICAuY29udGFjdF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA1NzZweCkge1xuICAuaGVhZGVyX190aXR0bGUge1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5yZXZpZXdfX3RpdHRsZSB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLnJldmlld19fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLnJldmlldyBhIGltZyB7XG4gICAgdG9wOiAtMTNweDtcbiAgICBsZWZ0OiAtMTVweDtcbiAgfVxuICAuaGVyb19fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLmhlcm8gLmZhLXBob25lIHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgICB0b3A6IDI1cHg7XG4gICAgcmlnaHQ6IDE1MHB4O1xuICB9XG4gIC5oZXJvX190ZWxlIHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgfVxuICAuaGVyb19fdGVsZS0tZmlyc3Qge1xuICAgIHRvcDogMTBweDtcbiAgfVxuICAuaGVyb19fdGVsZS0tc2Vjb25kIHtcbiAgICB0b3A6IDM1cHg7XG4gIH1cbiAgLmluZm9fX2ljb24ge1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5pbmZvX19oZWFkZXIge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB9XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNDAwcHg7XG4gIH1cbiAgLmFib3V0X19saXN0LS1pdGVtIHtcbiAgICBmb250LXNpemU6IDEuM3JlbTtcbiAgfVxuICAubG9nbyB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICB9XG4gIC5sb2dvX19pbWcge1xuICAgIHdpZHRoOiA3MHB4O1xuICAgIGhlaWdodDogNzBweDtcbiAgfVxuICAubG9nb19faW1nLS10b3lvdGEge1xuICAgIGhlaWdodDogNzBweDtcbiAgfVxuICAubG9nb19faW1nLS1uaXNzYW4ge1xuICAgIHdpZHRoOiA3NXB4O1xuICAgIGhlaWdodDogNTVweDtcbiAgfVxuICAub3Bpbmlvbl9fbmFtZSB7XG4gICAgdG9wOiAtMThweDtcbiAgICBsZWZ0OiAxMHB4O1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxuICAub3Bpbmlvbl9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAwLjlyZW07XG4gIH1cbiAgLm9waW5pb25fX3N0YXJzIHtcbiAgICB0b3A6IC0xOXB4O1xuICAgIGxlZnQ6IDQwMHB4O1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDY3MHB4KSB7XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBwYWRkaW5nOiAwLjJlbSAwLjVlbTtcbiAgfVxuICAuYWJvdXRfX2JveCB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIH1cbiAgLmFib3V0X19pbWcge1xuICAgIHdpZHRoOiAzMDBweDtcbiAgfVxuICAuYWJvdXRfX2xpc3Qge1xuICAgIHBhZGRpbmc6IDAgMC41ZW07XG4gIH1cbiAgLmFib3V0X19saXN0LS1pdGVtIHtcbiAgICBwYWRkaW5nOiAwLjFlbSAwO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgfVxuICAuYWJvdXQgaSB7XG4gICAgcGFkZGluZzogMCAwLjVlbTtcbiAgfVxuICAubG9nb19faW1nLS1uaXNzYW4ge1xuICAgIHdpZHRoOiA4MHB4O1xuICAgIGhlaWdodDogNTVweDtcbiAgfVxuICAuc2VydmljZV9fdGl0dGxlIHtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgfVxuICAuc2VydmljZV9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLm9waW5pb25fX25hbWUge1xuICAgIHRvcDogLTE5cHg7XG4gICAgbGVmdDogMTVweDtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgfVxuICAub3Bpbmlvbl9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICB9XG4gIC5vcGluaW9uX19zdGFycyB7XG4gICAgdG9wOiAtMjBweDtcbiAgICBsZWZ0OiA0ODBweDtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5oZWFkZXJfX3RpdHRsZSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5oZXJvIHtcbiAgICBoZWlnaHQ6IDcwdmg7XG4gIH1cbiAgLmhlcm9fX2ltZyB7XG4gICAgd2lkdGg6IDM1MHB4O1xuICAgIGhlaWdodDogMzAwcHg7XG4gIH1cbiAgLmhlcm9fX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5oZXJvIC5mYS1waG9uZSB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgdG9wOiAzMHB4O1xuICAgIHJpZ2h0OiAyMTBweDtcbiAgfVxuICAuaGVyb19fdGVsZSB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gIH1cbiAgLmhlcm9fX3RlbGUtLWZpcnN0IHtcbiAgICByaWdodDogMjBweDtcbiAgfVxuICAuaGVyb19fdGVsZS0tc2Vjb25kIHtcbiAgICB0b3A6IDQ1cHg7XG4gICAgcmlnaHQ6IDIwcHg7XG4gIH1cbiAgLnJldmlld19fdGl0dGxlIHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICAucmV2aWV3X190ZXh0IHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICAucmV2aWV3IGEgaW1nIHtcbiAgICB0b3A6IC0xMXB4O1xuICAgIGxlZnQ6IC0xM3B4O1xuICAgIHdpZHRoOiA2NXB4O1xuICAgIGhlaWdodDogNTVweDtcbiAgfVxuICAuaW5mb19faWNvbiB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gIH1cbiAgLmluZm9fX2hlYWRlciB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gIH1cbiAgLmFib3V0X190aXRsZSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIHBhZGRpbmc6IDAuMmVtIDAuNWVtO1xuICB9XG4gIC5hYm91dF9fYm94IHtcbiAgICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gIH1cbiAgLmFib3V0X19pbWcge1xuICAgIHdpZHRoOiAzNTBweDtcbiAgfVxuICAuYWJvdXRfX2xpc3QtLWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xuICB9XG4gIC5zZXJ2aWNlcyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuNCksIHJnYmEoMCwgMCwgMCwgMC41KSksIHVybChcIi9kaXN0L2ltZy9iYWNrZ3JvdW5kX2hlYWRlcjIucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgfVxuICAuc2VydmljZXNfX2JveGVzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbiAgLnNlcnZpY2VzIC5zZXJ2aWNlX190aXR0bGUge1xuICAgIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAxLjNyZW07XG4gICAgY29sb3I6IGdyZXk7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlc21va2U7XG4gICAgcGFkZGluZzogMC41ZW0gMDtcbiAgfVxuICAuc2VydmljZXMgLnNlcnZpY2VfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgfVxuICAuc2VydmljZXMgLnNlcnZpY2VfX2JveCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDIwMHB4O1xuICAgIGhlaWdodDogMzAwcHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgdHJhbnNpdGlvbjogMC4zcztcbiAgfVxuICAuc2VydmljZXMgLnNlcnZpY2VfX2JveDpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogNXB4IDVweCAzMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgfVxuICAuc2VydmljZXMgLnNlcnZpY2VfX2JveGVzLS10b3AsIC5zZXJ2aWNlcyAuc2VydmljZV9fYm94ZXMtLWJvdHRvbSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgbWFyZ2luOiAxZW0gMDtcbiAgfVxuICAub3Bpbmlvbl9fbmFtZSB7XG4gICAgdG9wOiAtMjJweDtcbiAgICBsZWZ0OiAxNXB4O1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB9XG4gIC5vcGluaW9uX190ZXh0IHtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgfVxuICAub3Bpbmlvbl9fc3RhcnMge1xuICAgIHRvcDogLTIycHg7XG4gICAgbGVmdDogNTQwcHg7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gIH1cbiAgLmNvbnRhY3RfX2JveCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbiAgLmNvbnRhY3RfX3RpdGxlIHtcbiAgICBmb250LWZhbWlseTogXCJBdWRpb3dpZGVcIiwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgICBwYWRkaW5nOiAwLjVlbSAwO1xuICB9XG4gIC5jb250YWN0X190ZXh0IHtcbiAgICBmb250LXNpemU6IDEuMnJlbTtcbiAgfVxuICAuY29udGFjdF9fbWFwIHtcbiAgICB3aWR0aDogNTV2dztcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwYWRkaW5nOiAxZW0gMmVtO1xuICB9XG4gIC5jb250YWN0X19tYXAtZnJhbWUge1xuICAgIHdpZHRoOiA1MHZ3O1xuICAgIGhlaWdodDogNTB2aDtcbiAgfVxuICAuY29udGFjdF9fZGV0YWlscyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgd2lkdGg6IDUwdnc7XG4gICAgaGVpZ2h0OiA1MHZoO1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICBib3JkZXItdG9wOiBub25lO1xuICB9XG4gIC5jb250YWN0X19wcml2YWN5IHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGZvbnQtc2l6ZTogMC43cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTAwcHgpIHtcbiAgLmFib3V0X19ib3gge1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgfVxuICAuYWJvdXRfX2ltZyB7XG4gICAgd2lkdGg6IDQ1MHB4O1xuICB9XG4gIC5hYm91dF9fbGlzdC0taXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgZm9udC1zaXplOiAxLjRyZW07XG4gIH1cbiAgLm9waW5pb25fX3N0YXJzIHtcbiAgICB0b3A6IC0yMnB4O1xuICAgIGxlZnQ6IDY4MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcbiAgLmhlcm8ge1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxuICAuaGVyb19faW1nIHtcbiAgICB3aWR0aDogNDUwcHg7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgfVxuICAucmV2aWV3X190aXR0bGUge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAucmV2aWV3X190ZXh0IHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICAucmV2aWV3IGEgaW1nIHtcbiAgICB0b3A6IC0xNnB4O1xuICAgIGxlZnQ6IC0yMHB4O1xuICAgIHdpZHRoOiA3NXB4O1xuICAgIGhlaWdodDogNjVweDtcbiAgfVxuICAuaW5mb19faWNvbiB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gIH1cbiAgLmluZm9fX2hlYWRlciB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gIH1cbiAgLmFib3V0X190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyLjJyZW07XG4gIH1cbiAgLmFib3V0X19ib3gge1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgfVxuICAuYWJvdXRfX2ltZyB7XG4gICAgd2lkdGg6IDUwMHB4O1xuICB9XG4gIC5hYm91dF9fbGlzdC0taXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5zZXJ2aWNlcyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuNCksIHJnYmEoMCwgMCwgMCwgMC41KSksIHVybChcIi9kaXN0L2ltZy9iYWNrZ3JvdW5kX2hlYWRlcjIucG5nXCIpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgfVxuICAuc2VydmljZXNfX2JveGVzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgcGFkZGluZzogMWVtO1xuICB9XG4gIC5zZXJ2aWNlcyAuc2VydmljZV9fdGl0dGxlIHtcbiAgICBmb250LWZhbWlseTogXCJBdWRpb3dpZGVcIiwgc2Fucy1zZXJpZjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICAgIGNvbG9yOiBncmV5O1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZXNtb2tlO1xuICAgIHBhZGRpbmc6IDAuNWVtIDA7XG4gIH1cbiAgLnNlcnZpY2VzIC5zZXJ2aWNlX190ZXh0IHtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgfVxuICAuc2VydmljZXMgLnNlcnZpY2VfX2JveCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMzUwcHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgcGFkZGluZzogMWVtIDAuNWVtO1xuICAgIHRyYW5zaXRpb246IDAuM3M7XG4gIH1cbiAgLnNlcnZpY2VzIC5zZXJ2aWNlX19ib3g6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDVweCA1cHggMzBweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XG4gIH1cbiAgLnNlcnZpY2VzIC5zZXJ2aWNlX19ib3hlcy0tdG9wLCAuc2VydmljZXMgLnNlcnZpY2VfX2JveGVzLS1ib3R0b20ge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIG1hcmdpbjogMmVtIDA7XG4gIH1cbiAgLm9waW5pb25fX2JveCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgaGVpZ2h0OiAxNjBweDtcbiAgfVxuICAub3Bpbmlvbl9fbmFtZSB7XG4gICAgdG9wOiAtMjFweDtcbiAgICBsZWZ0OiAxNXB4O1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB9XG4gIC5vcGluaW9uX190ZXh0IHtcbiAgICBtYXJnaW46IDAuM2VtIGF1dG87XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG4gIH1cbiAgLm9waW5pb25fX3N0YXJzIHtcbiAgICB0b3A6IC0yNHB4O1xuICAgIGxlZnQ6IDMxMHB4O1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5hYm91dF9fYm94IHtcbiAgICBwYWRkaW5nOiAwLjVlbSAxZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICB9XG4gIC5hYm91dF9fYm94IHtcbiAgICBwYWRkaW5nOiAxZW0gMWVtO1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNTUwcHg7XG4gIH1cbiAgLmFib3V0X19saXN0LS1pdGVtIHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICAub3Bpbmlvbl9fc3RhcnMge1xuICAgIHRvcDogLTIzcHg7XG4gIH1cbiAgLmNvbnRhY3RfX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICAuY29udGFjdF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjRyZW07XG4gIH1cbiAgLmNvbnRhY3RfX21hcCB7XG4gICAgd2lkdGg6IDY1dnc7XG4gIH1cbiAgLmNvbnRhY3RfX21hcC1mcmFtZSB7XG4gICAgd2lkdGg6IDYwdnc7XG4gICAgaGVpZ2h0OiA1MHZoO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XG4gIC5oZWFkZXJfX3RpdHRsZSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5oZWFkZXJfX3RleHQge1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5oZXJvIHtcbiAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgIGhlaWdodDogYXV0bztcbiAgfVxuICAucmV2aWV3X190ZXh0IHtcbiAgICBtYXJnaW4tbGVmdDogM2VtO1xuICB9XG4gIC5yZXZpZXdfX3RpdHRsZSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5yZXZpZXcgYSBpbWcge1xuICAgIHRvcDogLTI1cHg7XG4gICAgbGVmdDogLTI1cHg7XG4gICAgd2lkdGg6IDEyMHB4O1xuICAgIGhlaWdodDogOTBweDtcbiAgfVxuICAucmV2aWV3X190ZXh0IHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmluZm9fX2ljb24ge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgfVxuICAuaW5mb19faGVhZGVyIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLmFib3V0X19ib3gge1xuICAgIHBhZGRpbmc6IDAuNWVtIDFlbTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLmFib3V0X190aXRsZSB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07XG4gIH1cbiAgLmFib3V0X19ib3gge1xuICAgIHBhZGRpbmc6IDFlbSAxZW07XG4gIH1cbiAgLmFib3V0X19pbWcge1xuICAgIHdpZHRoOiA2NTBweDtcbiAgfVxuICAuYWJvdXRfX2xpc3QtLWl0ZW0ge1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5sb2dvX19pbWcge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICB9XG4gIC5sb2dvX19pbWctLXRveW90YSB7XG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgfVxuICAubG9nb19faW1nLS1uaXNzYW4ge1xuICAgIHdpZHRoOiAxMzBweDtcbiAgICBoZWlnaHQ6IDg1cHg7XG4gIH1cbiAgLm9waW5pb25fX25hbWUge1xuICAgIHRvcDogLTIxcHg7XG4gICAgbGVmdDogMTVweDtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgfVxuICAub3Bpbmlvbl9fdGV4dCB7XG4gICAgbWFyZ2luOiAwLjVlbSBhdXRvO1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICB9XG4gIC5vcGluaW9uX19zdGFycyB7XG4gICAgdG9wOiAtMjZweDtcbiAgICBsZWZ0OiAzOTBweDtcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgfVxuICAuY29udGFjdF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgfVxuICAuY29udGFjdF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gIH1cbiAgLmNvbnRhY3RfX21hcC1mcmFtZSB7XG4gICAgd2lkdGg6IDYwdnc7XG4gICAgaGVpZ2h0OiA2MHZoO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XG4gIC5oZWFkZXJfX3RpdHRsZSB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG4gIC5oZXJvX190ZXh0IHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgcGFkZGluZzogMC41ZW07XG4gIH1cbiAgLmhlcm9fX2xhbXAyIHtcbiAgICBsZWZ0OiA2MzBweDtcbiAgICB0b3A6IDIxMHB4O1xuICB9XG4gIC5oZXJvX19sYW1wMyB7XG4gICAgbGVmdDogNjYwcHg7XG4gICAgdG9wOiAyMTBweDtcbiAgfVxuICAuaGVyb19fbGFtcDQge1xuICAgIGxlZnQ6IDg1M3B4O1xuICAgIHRvcDogMjEzcHg7XG4gIH1cbiAgLmhlcm8gLmZhLXBob25lIHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICB0b3A6IDQ1cHg7XG4gICAgcmlnaHQ6IDIxMHB4O1xuICB9XG4gIC5oZXJvX190ZWxlIHtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICAuaGVyb19fdGVsZS0tZmlyc3Qge1xuICAgIHRvcDogMzBweDtcbiAgICByaWdodDogMjBweDtcbiAgfVxuICAuaGVyb19fdGVsZS0tc2Vjb25kIHtcbiAgICB0b3A6IDY1cHg7XG4gICAgcmlnaHQ6IDIwcHg7XG4gIH1cbiAgLmFib3V0X190aXRsZSB7XG4gICAgZm9udC1zaXplOiAzcmVtO1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNzUwcHg7XG4gIH1cbiAgLmFib3V0X19saXN0LS1pdGVtIHtcbiAgICBmb250LXNpemU6IDJyZW07XG4gIH1cbiAgLnNlcnZpY2VfX3RpdHRsZSB7XG4gICAgZm9udC1mYW1pbHk6IFwiQXVkaW93aWRlXCIsIHNhbnMtc2VyaWY7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgICBjb2xvcjogZ3JleTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGVzbW9rZTtcbiAgICBwYWRkaW5nOiAwLjVlbSAwO1xuICB9XG4gIC5zZXJ2aWNlX190ZXh0IHtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgfVxuICAuc2VydmljZV9fYm94IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aWR0aDogMjUwcHg7XG4gICAgaGVpZ2h0OiAzNTBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBwYWRkaW5nOiAxZW0gMC41ZW07XG4gICAgdHJhbnNpdGlvbjogMC4zcztcbiAgfVxuICAub3Bpbmlvbl9fbmFtZSB7XG4gICAgdG9wOiAtMjhweDtcbiAgICBsZWZ0OiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG4gIC5vcGluaW9uX190ZXh0IHtcbiAgICBtYXJnaW46IDFlbSBhdXRvO1xuICAgIGZvbnQtc2l6ZTogMS40cmVtO1xuICB9XG4gIC5vcGluaW9uX19zdGFycyB7XG4gICAgdG9wOiAtMjhweDtcbiAgICBsZWZ0OiA2MDBweDtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDIwMDBweCkge1xuICAuaGVhZGVyX190aXR0bGUge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgfVxuICAuaGVyb19fdGV4dCB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIHBhZGRpbmc6IDAuNWVtO1xuICB9XG4gIC5oZXJvX19sYW1wMiB7XG4gICAgbGVmdDogNjMwcHg7XG4gICAgdG9wOiAyMTBweDtcbiAgfVxuICAuaGVyb19fbGFtcDMge1xuICAgIGxlZnQ6IDY2MHB4O1xuICAgIHRvcDogMjEwcHg7XG4gIH1cbiAgLmhlcm9fX2xhbXA0IHtcbiAgICBsZWZ0OiA4NTNweDtcbiAgICB0b3A6IDIxM3B4O1xuICB9XG4gIC5hYm91dF9fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogM3JlbTtcbiAgfVxuICAuYWJvdXRfX2ltZyB7XG4gICAgd2lkdGg6IDc1MHB4O1xuICB9XG4gIC5hYm91dF9fbGlzdC0taXRlbSB7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICB9XG4gIC5zZXJ2aWNlX190aXR0bGUge1xuICAgIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgZm9udC1zaXplOiAxLjZyZW07XG4gICAgY29sb3I6IGdyZXk7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlc21va2U7XG4gICAgcGFkZGluZzogMC41ZW0gMDtcbiAgfVxuICAuc2VydmljZV9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxLjFyZW07XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIH1cbiAgLnNlcnZpY2VfX2JveCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgd2lkdGg6IDI1MHB4O1xuICAgIGhlaWdodDogMzUwcHg7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgcGFkZGluZzogMWVtIDAuNWVtO1xuICAgIHRyYW5zaXRpb246IDAuM3M7XG4gIH1cbiAgLm9waW5pb25fX25hbWUge1xuICAgIHRvcDogLTI4cHg7XG4gICAgbGVmdDogMjBweDtcbiAgICBmb250LXNpemU6IDEuNnJlbTtcbiAgfVxuICAub3Bpbmlvbl9fdGV4dCB7XG4gICAgbWFyZ2luOiAxZW0gYXV0bztcbiAgICBmb250LXNpemU6IDEuNHJlbTtcbiAgfVxuICAub3Bpbmlvbl9fc3RhcnMge1xuICAgIHRvcDogLTI4cHg7XG4gICAgbGVmdDogMTEwMHB4O1xuICAgIGZvbnQtc2l6ZTogMS42cmVtO1xuICB9XG59IiwiLnNlY3Rpb24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjkxNCk7XHJcbiAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxufSIsIi8vIDw0ODBweFxyXG5cclxuXHJcbi5oZWFkZXIge1xyXG5cclxuXHJcbiAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg0NWRlZywgcmdiYSgwLCAwLCAwLCAxKSwgcmdiYSgwLCAwLCAwLCAwLjkpKTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IC4zZW0gMDtcclxuXHJcbiAgICAmX190aXR0bGUge1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMC45cmVtO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19zcGFuIHtcclxuICAgICAgICBjb2xvcjogcmVkO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLmhlcm8ge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuNCksIHJnYmEoMCwgMCwgMCwgMC41KSksXHJcbiAgICAgICAgdXJsKFwiL2Rpc3QvaW1nL2JhY2tncm91bmRfaGVhZGVyMi5wbmdcIik7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICAgIGJhY2tncm91bmQtYXR0YWNobWVudDogc2Nyb2xsO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDUwdmg7XHJcbiAgICB6LWluZGV4OiAyO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuXHJcblxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHBhZGRpbmc6IC4yZW07XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgZm9udC1zaXplOiAuNnJlbTtcclxuXHJcbiAgICAgICAgLmZhLXBob25lIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDE1cHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiA4NXB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC40cmVtO1xyXG5cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3RlbGUge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBmb250LWZhbWlseTogXCJBdWRpb3dpZGVcIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICBmb250LXNpemU6IC42cmVtO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuXHJcbiAgICAgICAgJi0tZmlyc3Qge1xyXG4gICAgICAgICAgICB0b3A6IDVweDtcclxuICAgICAgICAgICAgcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1zZWNvbmQge1xyXG4gICAgICAgICAgICB0b3A6IDIwcHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAxMHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgICZfX2ltZyB7XHJcbiAgICAgICAgd2lkdGg6IDE1MHB4O1xyXG4gICAgICAgIGhlaWdodDogMTI1cHg7XHJcbiAgICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xhbXAsXHJcbiAgICAmX19sYW1wMixcclxuICAgICZfX2xhbXAzLFxyXG4gICAgJl9fbGFtcDQge1xyXG4gICAgICAgIGxlZnQ6IDg4NXB4O1xyXG4gICAgICAgIHRvcDogMjEycHg7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHdpZHRoOiAyM3B4O1xyXG4gICAgICAgIGhlaWdodDogMjNweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCA1MHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC43KTtcclxuXHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuXHJcbiAgICAgICAgZmlsdGVyOiBibHVyKDIwcHgpO1xyXG5cclxuICAgICAgICBhbmltYXRpb246IGxpZ2h0VXAgMXMgZWFzZS1pbi1vdXQgMHMgMyBhbHRlcm5hdGU7XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19sYW1wMiB7XHJcbiAgICAgICAgbGVmdDogMTMwcHg7XHJcbiAgICAgICAgdG9wOiAxMDBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19sYW1wMyB7XHJcbiAgICAgICAgbGVmdDogMjM1cHg7XHJcbiAgICAgICAgdG9wOiAxMDBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19sYW1wNCB7XHJcbiAgICAgICAgbGVmdDogMjU1cHg7XHJcbiAgICAgICAgdG9wOiAxMDBweDtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgbGlnaHRVcCB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICBmaWx0ZXI6IGJsdXIoMjBweCk7XHJcbiAgICAgICAgLyogTW9jbm8gcm96bXl0ZSBuYSBwb2N6xIV0a3UgKi9cclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDUwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xyXG4gICAgICAgIC8qIFPFgmFibyB3aWRvY3pueSBjaWXFhCAqL1xyXG4gICAgfVxyXG5cclxuICAgIDUwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICBmaWx0ZXI6IGJsdXIoNXB4KTtcclxuICAgICAgICAvKiBNbmllanN6ZSByb3pteWNpZSAqL1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTAwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAxKTtcclxuICAgICAgICAvKiDFmndpYXTFgm8gc3RhamUgc2nEmSBtb2NuaWVqc3plICovXHJcbiAgICB9XHJcblxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICBmaWx0ZXI6IGJsdXIoMjBweCk7XHJcbiAgICAgICAgLyogUm96bXljaWUgd3JhY2EgKi9cclxuICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDUwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xyXG4gICAgICAgIC8qIFptbmllanN6b25lIMWbd2lhdMWCbyAqL1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW5mbyB7XHJcblxyXG4gICAgJl9faWNvbiB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcclxuICAgIH1cclxuXHJcbiAgICAmX19jYXJkcyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIHdpZHRoOiAxMDB2dztcclxuICAgIH1cclxuXHJcbiAgICAmX19jYXJkIHtcclxuICAgICAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19oZWFkZXIge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjdyZW07XHJcbiAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgfVxyXG59XHJcblxyXG4uaW5mb19fY2FyZDpudGgtY2hpbGQoMSkge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIGFuaW1hdGlvbjogZmFkZUluIDJzIGVhc2Utb3V0IGZvcndhcmRzO1xyXG4gICAgLyogS2FydGEgMSBwb2phd2lhIHNpxJkgcG8gMiBzZWt1bmRhY2ggKi9cclxufVxyXG5cclxuLmluZm9fX2NhcmQ6bnRoLWNoaWxkKDIpIHtcclxuICAgIG9wYWNpdHk6IDA7XHJcbiAgICBhbmltYXRpb246IGZhZGVJbiAycyBlYXNlLW91dCBmb3J3YXJkcztcclxuICAgIGFuaW1hdGlvbi1kZWxheTogMXM7XHJcbiAgICAvKiBLYXJ0YSAyIHBvamF3aWEgc2nEmSBwbyA0IHNla3VuZGFjaCAqL1xyXG59XHJcblxyXG4uaW5mb19fY2FyZDpudGgtY2hpbGQoMykge1xyXG4gICAgb3BhY2l0eTogMDtcclxuICAgIGFuaW1hdGlvbjogZmFkZUluIDJzIGVhc2Utb3V0IGZvcndhcmRzO1xyXG4gICAgYW5pbWF0aW9uLWRlbGF5OiAycztcclxuICAgIC8qIEthcnRhIDMgcG9qYXdpYSBzacSZIHBvIDYgc2VrdW5kYWNoICovXHJcbn1cclxuXHJcblxyXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XHJcbiAgICAwJSB7XHJcbiAgICAgICAgb3BhY2l0eTogMDtcclxuXHJcbiAgICAgICAgLyogRWZla3QgcHJ6ZXN1bmnEmWNpYSAqL1xyXG4gICAgfVxyXG5cclxuICAgIDEwMCUge1xyXG4gICAgICAgIG9wYWNpdHk6IDE7XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLnJldmlldyB7XHJcbiAgICAvLyBoZWlnaHQ6IDEwdmg7XHJcbiAgICBwYWRkaW5nOiAwLjVlbSAxZW07XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjhyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDJlbTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGl0dGxlIHtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiQXVkaW93aWRlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgZm9udC1zaXplOiAuNnJlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3gsXHJcbiAgICAmX19pbmZvIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgIH1cclxuXHJcbiAgICBhIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuXHJcbiAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IC0xMnB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAtMjBweDtcclxuICAgICAgICAgICAgd2lkdGg6IDQ1cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW5mbyB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAyZW07XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG5cclxuXHJcbi5hYm91dCB7XHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiQXVkaW93aWRlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICAgICAgcGFkZGluZzogLjNlbSAuNWVtO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZTtcclxuICAgIH1cclxuXHJcbiAgICAmX19ib3gge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2ltZyB7XHJcbiAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgIG1hcmdpbi10b3A6IC41ZW07XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDVweCA1cHggMTBweCByZ2JhKCRjb2xvcjogI2ZmZmZmZjJlLCAkYWxwaGE6IDAuMik7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fbGlzdCB7XHJcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcclxuICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcblxyXG4gICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC44cmVtO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuLmxvZ28ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcblxyXG5cclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgJl9faW1nIHtcclxuICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICBoZWlnaHQ6IDUwcHg7XHJcblxyXG4gICAgICAgICYtLWJtdyB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNTVweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLXRveW90YSB7XHJcbiAgICAgICAgICAgIGhlaWdodDogNDVweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLW5pc3NhbiB7XHJcbiAgICAgICAgICAgIGhlaWdodDogMzVweDtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxufVxyXG5cclxuXHJcbi5zZXJ2aWNlcyB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsIHJnYmEoMCwgMCwgMCwgMC40KSwgcmdiYSgwLCAwLCAwLCAwLjUpKSxcclxuICAgICAgICB1cmwoXCIvZGlzdC9pbWcvYmFja2dyb3VuZF9oZWFkZXIyLnBuZ1wiKTtcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuXHJcbiAgICAmX19ib3hlcyB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zZXJ2aWNlIHtcclxuICAgICZfX2JveCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gLjVlbTtcclxuXHJcbiAgICAgICAgdHJhbnNpdGlvbjogb3V0bGluZSwgYm94LXNoYWRvdyAxcztcclxuICAgICAgICBtYXJnaW46IDFlbSAwIC41ZW0gMDtcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IDEwcHggMTBweCAzMHB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdHRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgY29sb3I6IGdyZXk7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlc21va2U7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBmb250LXNpemU6IC44cmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW07XHJcbiAgICB9XHJcblxyXG5cclxufVxyXG5cclxuLm9waW5pb25zIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCk7XHJcbiAgICBjb2xvcjogd2hpdGVzbW9rZTtcclxuICAgIHBhZGRpbmc6IDFlbSAwO1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHdoaXRlc21va2U7XHJcblxyXG4gICAgJl9fYm94IHtcclxuXHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG4ub3BpbmlvbiB7XHJcblxyXG4gICAgJl9fYm94IHtcclxuICAgICAgICBtYXJnaW4tdG9wOiAuNWVtO1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgd2hlYXQ7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoZWF0O1xyXG4gICAgICAgIGhlaWdodDogMTEwcHg7XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX19uYW1lIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDApO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogLTE1cHg7XHJcbiAgICAgICAgbGVmdDogMTBweDtcclxuICAgICAgICBmb250LXNpemU6IC44cmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IC43cmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IDFlbTtcclxuICAgIH1cclxuXHJcbiAgICAmX19zdGFycyB7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCk7XHJcbiAgICAgICAgdG9wOiAtMTVweDtcclxuICAgICAgICBsZWZ0OiAxODBweDtcclxuICAgICAgICBjb2xvcjogZ29sZGVucm9kO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBmb250LXNpemU6IC44cmVtO1xyXG4gICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcclxuICAgIH1cclxuXHJcblxyXG59XHJcblxyXG4uY29udGFjdCB7XHJcblxyXG4gICAgJl9fYm94IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgICB9XHJcbiAgICAmX190ZWxlcGhvbmV7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcblxyXG4gICAgJl9fcHJpdmFjeSB7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogLjVyZW07XHJcbiAgICAgICAgcGFkZGluZzogMWVtIDJlbTtcclxuXHJcbiAgICAgICAgJi0tbGlua3tcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgZm9udC1mYW1pbHk6IFwiQXVkaW93aWRlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjNyZW07XHJcbiAgICAgICAgcGFkZGluZzogLjVlbSAwO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgICAgcGFkZGluZzogLjJlbSAwO1xyXG5cclxuICAgICAgICAmLS10ZWx7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX21hcCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgcGFkZGluZzogMWVtIDA7XHJcblxyXG4gICAgICAgICYtZnJhbWUge1xyXG4gICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MHZoO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2RldGFpbHMge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMDtcclxuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgd2hpdGVzbW9rZTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbi5mb290ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICBwYWRkaW5nOiAuM2VtIDA7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fY3JlZGl0cyB7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgICAgZm9udC1zaXplOiAuNXJlbTtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgcGFkZGluZzogLjJlbTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuLy8tLTM5MC0tLy9cclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMzkwcHgpIHtcclxuXHJcbiAgICAuaGVhZGVyIHtcclxuICAgICAgICAmX190aXR0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICAuaGVybyB7XHJcblxyXG4gICAgICAgICZfX2luZm8ge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNGVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyNTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyMDBweDtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZmEtcGhvbmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDAuN3JlbTtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAuaW5mbyB7XHJcblxyXG5cclxuICAgICAgICAmX19pY29uIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgICAgICAgJl9faGVhZGVyIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAwLjhyZW07XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAucmV2aWV3IHtcclxuICAgICAgICAmX190aXR0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDAuOXJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogMmVtO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhIHtcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XHJcblxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMTVweDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IC0xOHB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDU1cHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5hYm91dCB7XHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzMDBweDtcclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICAgICAgJl9fbGlzdCB7XHJcblxyXG5cclxuICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAuM2VtIDA7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IC44cmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpIHtcclxuICAgICAgICAgICAgcGFkZGluZzogMCAuNWVtO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAub3BpbmlvbiB7XHJcblxyXG4gICAgICAgICZfX25hbWUge1xyXG4gICAgICAgICAgICB0b3A6IC0xN3B4O1xyXG4gICAgICAgICAgICBsZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45cmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogLjhyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19zdGFycyB7XHJcbiAgICAgICAgICAgIHRvcDogLTE3cHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDIyMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC45cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuLy8tLTQzMC0tLy9cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA0MzBweCkge1xyXG5cclxuICAgIC5hYm91dCB7XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzNTBweDtcclxuICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICAgICAgJl9fbGlzdCB7XHJcblxyXG4gICAgICAgICAgICAmLS1pdGVtIHtcclxuXHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDFyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC5zZXJ2aWNlIHtcclxuXHJcblxyXG4gICAgICAgICZfX3RpdHRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDFyZW07XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAub3BpbmlvbiB7XHJcblxyXG5cclxuICAgICAgICAmX19zdGFycyB7XHJcbiAgICAgICAgICAgIHRvcDogLTE3cHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDI2MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuY29udGFjdCB7XHJcbiAgICAgICAgJl9fcHJpdmFjeSB7XHJcblxyXG4gICAgICAgICAgICBmb250LXNpemU6IC43cmVtO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59IiwiIC8vIEBtZWRpYSAobWluLXdpZHRoOiA0ODBweCkge1xyXG4gLy8gICAgIC8qIFN0eWxpemFjamUgZGxhIHRlbGVmb27Ds3cgbyB3acSZa3N6eWNoIGVrcmFuYWNoICovXHJcbiAvLyB9XHJcbiAvLyBAbWVkaWEgKG1pbi13aWR0aDogNTc2cHgpIHtcclxuIC8vICAgICAvKiBTdHlsaXphY2plIGRsYSB3acSZa3N6eWNoIHRlbGVmb27Ds3cgKi9cclxuIC8vIH1cclxuXHJcblxyXG5cclxuXHJcbiBAbWVkaWEgKG1pbi13aWR0aDogNDgwcHgpIHtcclxuICAgICAub3BpbmlvbiB7XHJcblxyXG5cclxuICAgICAgICAgJl9fc3RhcnMge1xyXG4gICAgICAgICAgICAgdG9wOiAtMThweDtcclxuICAgICAgICAgICAgIGxlZnQ6IDMwMHB4O1xyXG5cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgICAgIC5jb250YWN0IHtcclxuXHJcbiAgICBcclxuICAgICAgICAgICAgICZfX3RpdGxlIHtcclxuIFxyXG4gICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xyXG4gICAgICAgICAgICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcclxuICAgIFxyXG4gICAgICAgICAgICAgfVxyXG4gICAgXHJcbiAgICAgICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICAgICAgIH1cclxuICAgIFxyXG4gICAgICAgICB9XHJcblxyXG4gfVxyXG5cclxuXHJcblxyXG4gQG1lZGlhIChtaW4td2lkdGg6IDU3NnB4KSB7XHJcblxyXG4gICAgIC5oZWFkZXIge1xyXG4gICAgICAgICAmX190aXR0bGUge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgfVxyXG5cclxuICAgICAucmV2aWV3IHtcclxuICAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICBhIHtcclxuXHJcblxyXG4gICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgICB0b3A6IC0xM3B4O1xyXG4gICAgICAgICAgICAgICAgIGxlZnQ6IC0xNXB4O1xyXG5cclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcbiAgICAgLmhlcm8ge1xyXG4gICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG5cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgLmZhLXBob25lIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgICAgICAgdG9wOiAyNXB4O1xyXG4gICAgICAgICAgICAgcmlnaHQ6IDE1MHB4O1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX190ZWxle1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuXHJcbiAgICAgICAgICAgICYtLWZpcnN0e1xyXG4gICAgICAgICAgICAgICAgdG9wOiAxMHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICYtLXNlY29uZHtcclxuICAgICAgICAgICAgICAgIHRvcDogMzVweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgICAuaW5mbyB7XHJcblxyXG5cclxuICAgICAgICAgJl9faWNvbiB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICAgfVxyXG5cclxuXHJcblxyXG5cclxuXHJcbiAgICAgICAgICZfX2hlYWRlciB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuXHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG5cclxuICAgICAuYWJvdXQge1xyXG4gICAgICAgICAmX190aXRsZSB7XHJcblxyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcblxyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19pbWcge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDQwMHB4O1xyXG4gICAgICAgICB9XHJcblxyXG5cclxuXHJcbiAgICAgICAgICZfX2xpc3Qge1xyXG5cclxuICAgICAgICAgICAgICYtLWl0ZW0ge1xyXG5cclxuICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuM3JlbTtcclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgfVxyXG5cclxuICAgICAubG9nbyB7XHJcbiAgICAgICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgICB3aWR0aDogNzBweDtcclxuICAgICAgICAgICAgIGhlaWdodDogNzBweDtcclxuXHJcbiAgICAgICAgICAgICAmLS10b3lvdGEge1xyXG4gICAgICAgICAgICAgICAgIGhlaWdodDogNzBweDtcclxuICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAmLS1uaXNzYW4ge1xyXG4gICAgICAgICAgICAgICAgIHdpZHRoOiA3NXB4O1xyXG4gICAgICAgICAgICAgICAgIGhlaWdodDogNTVweDtcclxuICAgICAgICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICB9XHJcbiAgICAgfVxyXG5cclxuICAgICAub3BpbmlvbiB7XHJcblxyXG4gICAgICAgICAmX19uYW1lIHtcclxuICAgICAgICAgICAgIHRvcDogLTE4cHg7XHJcbiAgICAgICAgICAgICBsZWZ0OiAxMHB4O1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogLjlyZW07XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX3N0YXJzIHtcclxuICAgICAgICAgICAgIHRvcDogLTE5cHg7XHJcbiAgICAgICAgICAgICBsZWZ0OiA0MDBweDtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuIH1cclxuXHJcblxyXG4gLy8tLTY3MC0tLy9cclxuXHJcbiBAbWVkaWEgKG1pbi13aWR0aDogNjcwcHgpIHtcclxuICAgICAuYWJvdXQge1xyXG4gICAgICAgICAmX190aXRsZSB7XHJcblxyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgICAgICAgcGFkZGluZzogLjJlbSAuNWVtO1xyXG5cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcbiAgICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuXHJcblxyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19pbWcge1xyXG4gICAgICAgICAgICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19saXN0IHtcclxuICAgICAgICAgICAgIHBhZGRpbmc6IDAgLjVlbTtcclxuXHJcblxyXG4gICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICAgcGFkZGluZzogLjFlbSAwO1xyXG4gICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgaSB7XHJcbiAgICAgICAgICAgICBwYWRkaW5nOiAwIC41ZW07XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG5cclxuICAgICAubG9nbyB7XHJcbiAgICAgICAgICZfX2ltZyB7XHJcblxyXG4gICAgICAgICAgICAgJi0tbmlzc2FuIHtcclxuICAgICAgICAgICAgICAgICB3aWR0aDogODBweDtcclxuICAgICAgICAgICAgICAgICBoZWlnaHQ6IDU1cHg7XHJcbiAgICAgICAgICAgICB9XHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG5cclxuICAgICAuc2VydmljZSB7XHJcblxyXG5cclxuICAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xyXG5cclxuICAgICAgICAgfVxyXG5cclxuICAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuXHJcbiAgICAgICAgIH1cclxuICAgICB9XHJcblxyXG5cclxuICAgICAub3BpbmlvbiB7XHJcblxyXG4gICAgICAgICAmX19uYW1lIHtcclxuICAgICAgICAgICAgIHRvcDogLTE5cHg7XHJcbiAgICAgICAgICAgICBsZWZ0OiAxNXB4O1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgICB9XHJcblxyXG4gICAgICAgICAmX19zdGFycyB7XHJcbiAgICAgICAgICAgICB0b3A6IC0yMHB4O1xyXG4gICAgICAgICAgICAgbGVmdDogNDgwcHg7XHJcbiAgICAgICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcclxuICAgICAgICAgfVxyXG4gICAgIH1cclxuXHJcblxyXG4gfSIsIi8vIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xyXG4vLyAgICAgLyogU3R5bGl6YWNqZSBkbGEgdGFibGV0w7N3ICovXHJcbi8vIH1cclxuLy8gQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XHJcbi8vICAgICAvKiBTdHlsaXphY2plIGRsYSB3acSZa3N6eWNoIHRhYmxldMOzdyBpIG1hxYJ5Y2ggbGFwdG9ww7N3ICovXHJcbi8vIH1cclxuXHJcblxyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XHJcblxyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5oZXJvIHtcclxuICAgICAgICBoZWlnaHQ6IDcwdmg7XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAzNTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzMDBweDtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLmZhLXBob25lIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgICAgIHRvcDogMzBweDtcclxuICAgICAgICAgICAgcmlnaHQ6IDIxMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGVsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG5cclxuICAgICAgICAgICAgJi0tZmlyc3Qge1xyXG4gICAgICAgICAgICAgICAgcmlnaHQ6IDIwcHg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICYtLXNlY29uZCB7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDQ1cHg7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMjBweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnJldmlldyB7XHJcbiAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhIHtcclxuXHJcblxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMTFweDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IC0xM3B4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDY1cHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDU1cHg7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5pbmZvIHtcclxuXHJcblxyXG4gICAgICAgICZfX2ljb24ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX19oZWFkZXIge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLmFib3V0IHtcclxuICAgICAgICAmX190aXRsZSB7XHJcblxyXG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC4yZW0gLjVlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDM1MHB4O1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xpc3Qge1xyXG5cclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG5cclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4zcmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5zZXJ2aWNlcyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuNCksIHJnYmEoMCwgMCwgMCwgMC41KSksXHJcbiAgICAgICAgICAgIHVybChcIi9kaXN0L2ltZy9iYWNrZ3JvdW5kX2hlYWRlcjIucG5nXCIpO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuXHJcbiAgICAgICAgJl9fYm94ZXMge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc2VydmljZSB7XHJcbiAgICAgICAgICAgICZfX3RpdHRsZSB7XHJcbiAgICAgICAgICAgICAgICBmb250LWZhbWlseTogXCJBdWRpb3dpZGVcIiwgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuM3JlbTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBncmV5O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlc21va2U7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICZfX2JveCB7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjAwcHg7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwMHB4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcztcclxuXHJcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiA1cHggNXB4IDMwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmX19ib3hlcyB7XHJcblxyXG4gICAgICAgICAgICAgICAgJi0tdG9wLFxyXG4gICAgICAgICAgICAgICAgJi0tYm90dG9tIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDFlbSAwO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5vcGluaW9uIHtcclxuXHJcbiAgICAgICAgJl9fbmFtZSB7XHJcbiAgICAgICAgICAgIHRvcDogLTIycHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDE1cHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS4xcmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fc3RhcnMge1xyXG4gICAgICAgICAgICB0b3A6IC0yMnB4O1xyXG4gICAgICAgICAgICBsZWZ0OiA1NDBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5jb250YWN0IHtcclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNHJlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbSAwO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19tYXAge1xyXG4gICAgICAgICAgICB3aWR0aDogNTV2dztcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAyZW07XHJcblxyXG4gICAgICAgICAgICAmLWZyYW1lIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA1MHZ3O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHZoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19kZXRhaWxzIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MHZ3O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDUwdmg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICAgICAgICBib3JkZXItdG9wOiBub25lO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICZfX3ByaXZhY3kge1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IC43cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuLy8tLTkwMC0tLy9cclxuXHJcbkBtZWRpYSAobWluLXdpZHRoOiA5MDBweCkge1xyXG5cclxuICAgIC5hYm91dCB7XHJcblxyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDFlbTtcclxuXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDQ1MHB4O1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xpc3Qge1xyXG5cclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogLjVlbTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5vcGluaW9uIHtcclxuXHJcblxyXG5cclxuICAgICAgICAmX19zdGFycyB7XHJcbiAgICAgICAgICAgIHRvcDogLTIycHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDY4MHB4O1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuLy8tLTk5Mi0tLy9cclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuXHJcblxyXG4gICAgLmhlcm8ge1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDQ1MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQwMHB4O1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5yZXZpZXcge1xyXG4gICAgICAgICZfX3RpdHRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGEge1xyXG5cclxuXHJcbiAgICAgICAgICAgIGltZyB7XHJcbiAgICAgICAgICAgICAgICB0b3A6IC0xNnB4O1xyXG4gICAgICAgICAgICAgICAgbGVmdDogLTIwcHg7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNzVweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogNjVweDtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLmluZm8ge1xyXG5cclxuXHJcbiAgICAgICAgJl9faWNvbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgICAgICZfX2hlYWRlciB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICAuYWJvdXQge1xyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcblxyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuMnJlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MDBweDtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19saXN0IHtcclxuXHJcblxyXG4gICAgICAgICAgICAmLS1pdGVtIHtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFlbTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5zZXJ2aWNlcyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCByZ2JhKDAsIDAsIDAsIDAuNCksIHJnYmEoMCwgMCwgMCwgMC41KSksXHJcbiAgICAgICAgICAgIHVybChcIi9kaXN0L2ltZy9iYWNrZ3JvdW5kX2hlYWRlcjIucG5nXCIpO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuXHJcbiAgICAgICAgJl9fYm94ZXMge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW07XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zZXJ2aWNlIHtcclxuICAgICAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IGdyZXk7XHJcbiAgICAgICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgd2hpdGVzbW9rZTtcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcclxuICAgICAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xyXG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAzNTBweDtcclxuICAgICAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAxZW0gLjVlbTtcclxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcztcclxuXHJcbiAgICAgICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiA1cHggNXB4IDMwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmX19ib3hlcyB7XHJcblxyXG4gICAgICAgICAgICAgICAgJi0tdG9wLFxyXG4gICAgICAgICAgICAgICAgJi0tYm90dG9tIHtcclxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG4gICAgICAgICAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDJlbSAwO1xyXG5cclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcblxyXG4gICAgLm9waW5pb24ge1xyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxNjBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX25hbWUge1xyXG4gICAgICAgICAgICB0b3A6IC0yMXB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAxNXB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBtYXJnaW46IC4zZW0gYXV0bztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19zdGFycyB7XHJcbiAgICAgICAgICAgIHRvcDogLTI0cHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDMxMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8vLS0xMDI0LS0vL1xyXG5cclxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xyXG5cclxuICAgIC5hYm91dCB7XHJcblxyXG4gICAgICAgICZfX2JveCB7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW0gMWVtO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcblxyXG4gICAgICAgICAgICBmb250LXNpemU6IDIuNXJlbTtcclxuXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIDFlbTtcclxuXHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1NTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xpc3Qge1xyXG5cclxuXHJcbiAgICAgICAgICAgICYtLWl0ZW0ge1xyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5vcGluaW9uIHtcclxuXHJcbiAgICAgICAgJl9fc3RhcnMge1xyXG4gICAgICAgICAgICB0b3A6IC0yM3B4O1xyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5jb250YWN0IHtcclxuXHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX21hcCB7XHJcblxyXG4gICAgICAgICAgICB3aWR0aDogNjV2dztcclxuXHJcbiAgICAgICAgICAgICYtZnJhbWUge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwdmg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxufSIsIi8vIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHtcclxuLy8gICAgIC8qIFN0eWxpemFjamUgZGxhIHdpxJlrc3p5Y2ggbGFwdG9ww7N3IGkgbW9uaXRvcsOzdyBkZXNrdG9wb3d5Y2ggKi9cclxuLy8gfVxyXG5cclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7XHJcblxyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuaGVybyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcclxuICAgICAgICBoZWlnaHQ6IGF1dG87XHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5yZXZpZXcge1xyXG5cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190aXR0bGUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhIHtcclxuXHJcblxyXG4gICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgdG9wOiAtMjVweDtcclxuICAgICAgICAgICAgICAgIGxlZnQ6IC0yNXB4O1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEyMHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA5MHB4O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC5pbmZvIHtcclxuXHJcbiAgICAgICAgJl9faWNvbiB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogM3JlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcblxyXG4gICAgICAgICZfX2hlYWRlciB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcblxyXG4gICAgLmFib3V0IHtcclxuXHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbSAxZW07XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RpdGxlIHtcclxuXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xyXG5cclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxZW0gMWVtO1xyXG5cclxuXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDY1MHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGlzdCB7XHJcblxyXG5cclxuICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC5sb2dvIHtcclxuXHJcblxyXG4gICAgICAgICZfX2ltZyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDBweDtcclxuXHJcbiAgICAgICAgICAgICYtLXRveW90YSB7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAmLS1uaXNzYW4ge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEzMHB4O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA4NXB4O1xyXG4gICAgICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgLm9waW5pb24ge1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICZfX25hbWUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC0yMXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAxNXB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuNHJlbTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogLjVlbSBhdXRvO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgJl9fc3RhcnMge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC0yNnB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiAzOTBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxLjRyZW07XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgIC5jb250YWN0IHtcclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAmX190aXRsZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAmX19tYXAge1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAmLWZyYW1lIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA2MHZ3O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA2MHZoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgfVxyXG5cclxufSIsIi8vID4xMjAwcHhcclxuXHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XHJcblxyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5oZXJvIHtcclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX19sYW1wMiB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDYzMHB4O1xyXG4gICAgICAgICAgICB0b3A6IDIxMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGFtcDMge1xyXG4gICAgICAgICAgICBsZWZ0OiA2NjBweDtcclxuICAgICAgICAgICAgdG9wOiAyMTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xhbXA0IHtcclxuICAgICAgICAgICAgbGVmdDogODUzcHg7XHJcbiAgICAgICAgICAgIHRvcDogMjEzcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuZmEtcGhvbmUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICAgICAgdG9wOiA0NXB4O1xyXG4gICAgICAgICAgICByaWdodDogMjEwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZWxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcblxyXG4gICAgICAgICAgICAmLS1maXJzdCB7XHJcbiAgICAgICAgICAgICAgICB0b3A6IDMwcHg7XHJcbiAgICAgICAgICAgICAgICByaWdodDogMjBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJi0tc2Vjb25kIHtcclxuICAgICAgICAgICAgICAgIHRvcDogNjVweDtcclxuICAgICAgICAgICAgICAgIHJpZ2h0OiAyMHB4O1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYWJvdXQge1xyXG5cclxuICAgICAgICAmX190aXRsZSB7XHJcblxyXG4gICAgICAgICAgICBmb250LXNpemU6IDNyZW07XHJcblxyXG5cclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX19pbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogNzUwcHg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19saXN0IHtcclxuXHJcblxyXG4gICAgICAgICAgICAmLS1pdGVtIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuc2VydmljZSB7XHJcbiAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiQXVkaW93aWRlXCIsIHNhbnMtc2VyaWY7XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgICAgICBjb2xvcjogZ3JleTtcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHdoaXRlc21va2U7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IC41ZW0gMDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuMXJlbTtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX19ib3gge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcclxuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICB3aWR0aDogMjUwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMzUwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIC41ZW07XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IC4zcztcclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLm9waW5pb24ge1xyXG5cclxuXHJcbiAgICAgICAgJl9fbmFtZSB7XHJcbiAgICAgICAgICAgIHRvcDogLTI4cHg7XHJcbiAgICAgICAgICAgIGxlZnQ6IDIwcHg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMWVtIGF1dG87XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS40cmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fc3RhcnMge1xyXG4gICAgICAgICAgICB0b3A6IC0yOHB4O1xyXG4gICAgICAgICAgICBsZWZ0OiA2MDBweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1pbi13aWR0aDogMjAwMHB4KSB7XHJcblxyXG4gICAgLmhlYWRlciB7XHJcbiAgICAgICAgJl9fdGl0dGxlIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIC5oZXJvIHtcclxuXHJcbiAgICAgICAgJl9fdGV4dCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgICAgICAgICAgcGFkZGluZzogLjVlbTtcclxuICAgICAgICB9XHJcblxyXG5cclxuICAgICAgICAmX19sYW1wMiB7XHJcbiAgICAgICAgICAgIGxlZnQ6IDYzMHB4O1xyXG4gICAgICAgICAgICB0b3A6IDIxMHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGFtcDMge1xyXG4gICAgICAgICAgICBsZWZ0OiA2NjBweDtcclxuICAgICAgICAgICAgdG9wOiAyMTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX2xhbXA0IHtcclxuICAgICAgICAgICAgbGVmdDogODUzcHg7XHJcbiAgICAgICAgICAgIHRvcDogMjEzcHg7XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICB9XHJcblxyXG4gICAgLmFib3V0IHtcclxuXHJcbiAgICAgICAgJl9fdGl0bGUge1xyXG5cclxuICAgICAgICAgICAgZm9udC1zaXplOiAzcmVtO1xyXG5cclxuXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgJl9faW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDc1MHB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fbGlzdCB7XHJcblxyXG5cclxuICAgICAgICAgICAgJi0taXRlbSB7XHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnNlcnZpY2Uge1xyXG4gICAgICAgICZfX3RpdHRsZSB7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBcIkF1ZGlvd2lkZVwiLCBzYW5zLXNlcmlmO1xyXG4gICAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICAgICAgY29sb3I6IGdyZXk7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCB3aGl0ZXNtb2tlO1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAuNWVtIDA7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmX190ZXh0IHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJl9fYm94IHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XHJcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgd2lkdGg6IDI1MHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDM1MHB4O1xyXG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAuNWVtO1xyXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAuM3M7XHJcblxyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgIC5vcGluaW9uIHtcclxuXHJcblxyXG4gICAgICAgICZfX25hbWUge1xyXG4gICAgICAgICAgICB0b3A6IC0yOHB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAyMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3RleHQge1xyXG4gICAgICAgICAgICBtYXJnaW46IDFlbSBhdXRvO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNHJlbTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICZfX3N0YXJzIHtcclxuICAgICAgICAgICAgdG9wOiAtMjhweDtcclxuICAgICAgICAgICAgbGVmdDogMTEwMHB4O1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0= */
